Arjun and Secret Ingredients (Moderate Coding)
Arjun recently visited ShareChat Cafe and was highly impressed by the food. Being a food enthusiast, he decided to inquire about the ingredients of each dish.
There are N dishes represented by strings S1,S2,…,SN?. Each ingredient used for making dishes in ShareChat Cafe is represented by a lowercase English letter.
For each valid iii, the ingredients used to make dish iii correspond to characters in the string Si (note that ingredients may be used multiple times). A special ingredient is an ingredient that is present in each dish at least once.
Arjun wants to know the number of special ingredients in ShareChat Cafe. Since he is too busy exploring new cuisines, can you help him?

Input Format:................
The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer
The first line of each test case contains a single integer N.
The next N lines contain the strings S1,S2,…,SN?, representing the ingredients of the dishes.

Output Format:.................
For each test case, print a single line containing one integer: the number of special ingredients in the dishes.

Constraints...............
1<=T<=1,000
1<=N<=1,000
1<=?Si?<=200 for each valid i
The sum of the lengths of strings over all test cases <=3,500,000.
S1,S2,…,SN contain only lowercase English letters.

Sample Input...........
2
3
abcaa
bcbd
bgc
3
quick
brown
fox

Sample Output............
2
0

Explanation...........
Example case 1:
Ingredients 'b' and 'c' are present in all three dishes, so there are two special ingredients.

Example case 2:
No ingredient is common to all three dishes.

................................SOLUTION IN PYTHON AND JAVA......................................

PYTHON...

def count_special_ingredients(test_cases):  
    results = []  
    for ingredients in test_cases:  
        # Start with the first dish's ingredients as a set  
        common_ingredients = set(ingredients[0])  
        
        # Intersect with the ingredients of the other dishes  
        for dish in ingredients[1:]:  
            common_ingredients.intersection_update(set(dish))  
        
        # The number of special ingredients is the size of the common set  
        results.append(len(common_ingredients))  
    
    return results  

# Read input  
T = int(input().strip())  
test_cases = []  
for _ in range(T):  
    N = int(input().strip())  
    dishes = [input().strip() for _ in range(N)]  
    test_cases.append(dishes)  

# Get the results  
results = count_special_ingredients(test_cases)  

# Print the results  
for result in results:  
    print(result)
..........................................................................................

JAVA......

import java.util.*;  

public class SpecialIngredients {  
    
    public static void main(String[] args) {  
        Scanner scanner = new Scanner(System.in);  
        int T = Integer.parseInt(scanner.nextLine().trim()); // Number of test cases  
        List<Integer> results = new ArrayList<>();  
        
        for (int t = 0; t < T; t++) {  
            int N = Integer.parseInt(scanner.nextLine().trim()); // Number of dishes  
            Set<Character> commonIngredients = new HashSet<>();  

            // Initialize the set with ingredients of the first dish  
            String firstDish = scanner.nextLine().trim();  
            for (char c : firstDish.toCharArray()) {  
                commonIngredients.add(c);  
            }  

            // Process each subsequent dish  
            for (int n = 1; n < N; n++) {  
                String dish = scanner.nextLine().trim();  
                Set<Character> currentDishIngredients = new HashSet<>();  
                
                for (char c : dish.toCharArray()) {  
                    currentDishIngredients.add(c);  
                }  
                
                // Keep only common ingredients  
                commonIngredients.retainAll(currentDishIngredients);  
            }  

            // The number of special ingredients is the size of the common set  
            results.add(commonIngredients.size());  
        }  

        // Print results for each test case  
        for (int result : results) {  
            System.out.println(result);  
        }  

        scanner.close();  
    }  
}
............................................................................
